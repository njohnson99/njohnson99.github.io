// @flekschas/utils v0.29.0 Copyright 2021 Fritz Lekschas
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.utils = global.utils || {}));
}(this, (function (exports) { 'use strict';

  /**
   * Create a worker from a function
   * @param {function} fn - Function to be turned into a worker
   * @return {Worker} Worker function
   */
  var createWorker = function createWorker(fn) {
    return new Worker(window.URL.createObjectURL(new Blob(["(".concat(fn.toString(), ")()")], {
      type: 'text/javascript'
    })));
  };
  /**
   * An adventure into the void!
   * @return {undefined} The explorers find nothing but void.
   */

  var toVoid = function toVoid() {};
  var noop = toVoid;

  exports.createWorker = createWorker;
  exports.noop = noop;
  exports.toVoid = toVoid;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
