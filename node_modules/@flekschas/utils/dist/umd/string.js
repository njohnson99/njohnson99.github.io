// @flekschas/utils v0.29.0 Copyright 2021 Fritz Lekschas
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.utils = global.utils || {}));
}(this, (function (exports) { 'use strict';

  var camelToConst = function camelToConst(str) {
    return str.split(/(?=[A-Z])/).join('_').toUpperCase();
  };
  var capitalize = function capitalize(str) {
    return "".concat(str[0].toUpperCase()).concat(str.substr(1));
  };
  /**
   * FInd the nth instance of the query string
   * @param   {string}  str  String to search across
   * @param   {string}  query  String to search for
   * @param   {number}  n  nth instance
   * @return  {number}  Index of the nth query string or -1
   */

  var nthIndexOf = function nthIndexOf(str, query) {
    var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    var i = 0;
    var idx = str.indexOf(query);

    while (i < n && idx >= 0) {
      idx = str.indexOf(query, idx + 1);
      i++;
    }

    return idx;
  };
  /**
   * Create a random string from some alphabet
   * @param {number} length - Length of the random string
   * @param {string} alphabet - Possible characters
   * @return {string} Random string
   */

  var randomString = function randomString(length) {
    var alphabet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'abcdefghijklmnopqrstuvwxyz';
    return Array(length).join().split(',').map(function () {
      return alphabet.charAt(Math.floor(Math.random() * alphabet.length));
    }).join('');
  };

  exports.camelToConst = camelToConst;
  exports.capitalize = capitalize;
  exports.nthIndexOf = nthIndexOf;
  exports.randomString = randomString;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
