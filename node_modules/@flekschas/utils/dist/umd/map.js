// @flekschas/utils v0.29.0 Copyright 2021 Fritz Lekschas
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/regenerator')) :
  typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/regenerator'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.utils = global.utils || {}, global._regeneratorRuntime));
}(this, (function (exports, _regeneratorRuntime) { 'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

  var _regeneratorRuntime__default = /*#__PURE__*/_interopDefaultLegacy(_regeneratorRuntime);

  var mergeMaps = function mergeMaps(map1, map2) {
    return new Map( /*#__PURE__*/_regeneratorRuntime__default['default'].mark(function merge() {
      return _regeneratorRuntime__default['default'].wrap(function merge$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              return _context.delegateYield(map1, "t0", 1);

            case 1:
              return _context.delegateYield(map2, "t1", 2);

            case 2:
            case "end":
              return _context.stop();
          }
        }
      }, merge);
    })());
  };

  exports.mergeMaps = mergeMaps;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
